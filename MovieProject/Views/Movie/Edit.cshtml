
@model Movie
@{
	ViewBag.Title = $"{ViewBag.Action}"; // here we could put "Edit Movie" but with the $ we are going to call the viewBag.Action that exists in the Add method in the Get Action in the controller
}
<h2>@ViewBag.Action</h2>
<form asp-action="Edit" method="post">
	<div asp-validation-summary="All" class="text-danger"></div>
	<div class="mb-3">
		<label asp-for="Name" class="form-label"></label>
		<input asp-for="Name" class="form-control" />
	</div>
	<div class="mb-3">
		<label asp-for="Description" class="form-label"></label>
		<textarea asp-for="Description" class="form-control"></textarea>
	</div>
	<div class="mb-3">
		<label asp-for="Year" class="form-label"></label>
		<input asp-for="Year" class="form-control" />
	</div>
	<div class="mb-3">
		<label asp-for="GenreId" class="form-label">Genre</label>
		<select asp-for="GenreId" class="form-control">
		<option value=""> -- Select Genre -- </option>
		   @foreach (var genre in ViewBag.Genres)
		{
			<option value="@genre.GenreId">@genre.Name</option>
		}
		</select>
   
	</div>
	<div class="mb-3">
		<label asp-for="Rating" class="form-label"></label>
		<input asp-for="Rating" class="form-control" />
	</div>
	<input type="hidden" asp-for="MovieId" />
	<button type="submit" class="btn btn-primary">Save</button>
	<a asp-controller="Home" asp-action="Index" class="btn btn-secondary">Cancel</a>

</form>